// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace VacanciesApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ApprenticeshipSummary
    {
        /// <summary>
        /// Initializes a new instance of the ApprenticeshipSummary class.
        /// </summary>
        public ApprenticeshipSummary()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApprenticeshipSummary class.
        /// </summary>
        /// <param name="trainingType">Possible values include: 'Unavailable',
        /// 'Framework', 'Standard'</param>
        public ApprenticeshipSummary(int? vacancyReference = default(int?), string title = default(string), string shortDescription = default(string), System.DateTime? expectedStartDate = default(System.DateTime?), System.DateTime? postedDate = default(System.DateTime?), System.DateTime? applicationClosingDate = default(System.DateTime?), int? numberOfPositions = default(int?), string trainingType = default(string), string trainingTitle = default(string), string trainingCode = default(string), string employerName = default(string), string trainingProviderName = default(string), bool? isNationwide = default(bool?), GeoPoint location = default(GeoPoint), string apprenticeshipLevel = default(string), string vacancyUrl = default(string), bool? isEmployerDisabilityConfident = default(bool?), double? distanceInMiles = default(double?))
        {
            VacancyReference = vacancyReference;
            Title = title;
            ShortDescription = shortDescription;
            ExpectedStartDate = expectedStartDate;
            PostedDate = postedDate;
            ApplicationClosingDate = applicationClosingDate;
            NumberOfPositions = numberOfPositions;
            TrainingType = trainingType;
            TrainingTitle = trainingTitle;
            TrainingCode = trainingCode;
            EmployerName = employerName;
            TrainingProviderName = trainingProviderName;
            IsNationwide = isNationwide;
            Location = location;
            ApprenticeshipLevel = apprenticeshipLevel;
            VacancyUrl = vacancyUrl;
            IsEmployerDisabilityConfident = isEmployerDisabilityConfident;
            DistanceInMiles = distanceInMiles;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vacancyReference")]
        public int? VacancyReference { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shortDescription")]
        public string ShortDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expectedStartDate")]
        public System.DateTime? ExpectedStartDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postedDate")]
        public System.DateTime? PostedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationClosingDate")]
        public System.DateTime? ApplicationClosingDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "numberOfPositions")]
        public int? NumberOfPositions { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unavailable', 'Framework',
        /// 'Standard'
        /// </summary>
        [JsonProperty(PropertyName = "trainingType")]
        public string TrainingType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trainingTitle")]
        public string TrainingTitle { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trainingCode")]
        public string TrainingCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "employerName")]
        public string EmployerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "trainingProviderName")]
        public string TrainingProviderName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isNationwide")]
        public bool? IsNationwide { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public GeoPoint Location { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apprenticeshipLevel")]
        public string ApprenticeshipLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vacancyUrl")]
        public string VacancyUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isEmployerDisabilityConfident")]
        public bool? IsEmployerDisabilityConfident { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "distanceInMiles")]
        public double? DistanceInMiles { get; set; }

    }
}
