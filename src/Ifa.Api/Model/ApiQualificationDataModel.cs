/* 
 * IfA Standards API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Ifa.Api.Model
{
    /// <summary>
    /// ApiBehaviourDataModel
    /// </summary>
    [DataContract]
    public partial class ApiQualificationDataModel : IEquatable<ApiQualificationDataModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiBehaviourDataModel" /> class.
        /// </summary>
        /// <param name="qualificationId">detail.</param>
        /// <param name="title">title.</param>
        /// <param name="level">level.</param>
        public ApiQualificationDataModel(string qualificationId = default(string), string title = default(string), string level = default(string))
        {
            this.QualificationId = qualificationId;
            this.Title = title;
            this.Level = level;
        }

        /// <summary>
        /// Gets or Sets qualificationId
        /// </summary>
        [DataMember(Name = "qualificationId", EmitDefaultValue = false)]
        public string QualificationId { get; set; }

        /// <summary>
        /// Gets or Sets title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets level
        /// </summary>
        [DataMember(Name = "level", EmitDefaultValue = false)]
        public string Level { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiQualificationsDataModel {\n");
            sb.Append("  QualificationId: ").Append(QualificationId).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiQualificationDataModel);
        }

        /// <summary>
        /// Returns true if ApiBehaviourDataModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiBehaviourDataModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiQualificationDataModel input)
        {
            if (input == null)
                return false;

            return
                (
                    this.QualificationId == input.QualificationId ||
                    (this.QualificationId != null &&
                    this.QualificationId.Equals(input.QualificationId))
                ) &&
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) &&
                (
                    this.Level == input.Level ||
                    (this.Level != null &&
                    this.Level.Equals(input.Level))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.QualificationId != null)
                    hashCode = hashCode * 59 + this.QualificationId.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Level != null)
                    hashCode = hashCode * 59 + this.Level.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
