/* 
 * IfA Standards API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Ifa.Api.Model
{
    /// <summary>
    /// ApiApprenticeshipStandard
    /// </summary>
    [DataContract]
    public partial class ApiApprenticeshipStandard :  IEquatable<ApiApprenticeshipStandard>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiApprenticeshipStandard" /> class.
        /// </summary>
        /// <param name="larsCode">larsCode.</param>
        /// <param name="referenceNumber">referenceNumber.</param>
        /// <param name="title">title.</param>
        /// <param name="status">status.</param>
        /// <param name="url">url.</param>
        /// <param name="standardPageUrl">standardPageUrl.</param>
        /// <param name="overviewOfRole">overviewOfRole.</param>
        /// <param name="level">level.</param>
        /// <param name="typicalDuration">typicalDuration.</param>
        /// <param name="maxFunding">maxFunding.</param>
        /// <param name="route">route.</param>
        /// <param name="keywords">keywords.</param>
        /// <param name="jobRoles">jobRoles.</param>
        /// <param name="entryRequirements">entryRequirements.</param>
        /// <param name="qualifications">qualifications.</param>
        /// <param name="assessmentPlanUrl">assessmentPlanUrl.</param>
        /// <param name="ssa1">ssa1.</param>
        /// <param name="ssa2">ssa2.</param>
        /// <param name="version">version.</param>
        /// <param name="standardOccupationalCode">standardOccupationalCode.</param>
        /// <param name="occupationalStandardUrl">occupationalStandardUrl.</param>
        /// <param name="occupationalSummary">occupationalSummary.</param>
        /// <param name="duties">duties.</param>
        /// <param name="knowledges">knowledges.</param>
        /// <param name="behaviours">behaviours.</param>
        /// <param name="skills">skills.</param>
        /// <param name="options">options.</param>
        /// <param name="professionalRecognition">professionalRecognition.</param>
        /// <param name="proposalApproved">proposalApproved.</param>
        /// <param name="standardApproved">standardApproved.</param>
        /// <param name="epaApprovalDate">epaApprovalDate.</param>
        /// <param name="fundingApprovalDate">fundingApprovalDate.</param>
        /// <param name="eQAProvider">eQAProvider.</param>
        /// <param name="approvedForDelivery">approvedForDelivery.</param>
        /// <param name="integratedDegree">integratedDegree.</param>
        /// <param name="tbReference">tbReference.</param>
        /// <param name="tbMainContact">tbMainContact.</param>
        /// <param name="involvedEmployers">involvedEmployers.</param>
        /// <param name="regulated">regulated.</param>
        /// <param name="regulatedBody">regulatedBody.</param>
        /// <param name="regulationDetail">regulationDetail.</param>
        /// <param name="coreAndOptions">coreAndOptions.</param>
        /// <param name="typicalJobTitles">typicalJobTitles.</param>
        /// <param name="englishAndMathsQualifications">englishAndMathsQualifications.</param>
        /// <param name="reviewDetails">reviewDetails.</param>
        /// <param name="pathway">pathway.</param>
        /// <param name="cluster">cluster.</param>
        /// <param name="createdDate">createdDate.</param>
        /// <param name="lastUpdated">lastUpdated.</param>
        public ApiApprenticeshipStandard(int larsCode = default(int), string referenceNumber = default(string), string title = default(string), string status = default(string), string url = default(string), string standardPageUrl = default(string), string overviewOfRole = default(string), decimal level = default(decimal), int typicalDuration = default(int), int maxFunding = default(int), string route = default(string), List<string> keywords = default(List<string>), List<string> jobRoles = default(List<string>), string entryRequirements = default(string), string qualifications = default(string), string assessmentPlanUrl = default(string), string ssa1 = default(string), string ssa2 = default(string), string version = default(string), string standardOccupationalCode = default(string), string occupationalStandardUrl = default(string), string occupationalSummary = default(string), List<ApiDutyDataModel> duties = default(List<ApiDutyDataModel>), List<ApiKnowledgeDataModel> knowledges = default(List<ApiKnowledgeDataModel>), List<ApiBehaviourDataModel> behaviours = default(List<ApiBehaviourDataModel>), List<ApiSkillDataModel> skills = default(List<ApiSkillDataModel>), List<ApiOptionDataModel> options = default(List<ApiOptionDataModel>), List<ApiProfessionalRecognition> professionalRecognition = default(List<ApiProfessionalRecognition>), DateTime? proposalApproved = null, DateTime? standardApproved = null, DateTime? epaApprovalDate = null, DateTime? fundingApprovalDate = null, ApiEqaProviderDataModel eQAProvider = default(ApiEqaProviderDataModel), DateTime? approvedForDelivery = null, string integratedDegree = default(string), string tbReference = default(string), string tbMainContact = default(string), string involvedEmployers = default(string), bool regulated = default(bool), string regulatedBody = default(string), List<ApiRegulatedStandardData> regulationDetail = default(List<ApiRegulatedStandardData>), bool coreAndOptions = default(bool), List<string> typicalJobTitles = default(List<string>), string englishAndMathsQualifications = default(string), string reviewDetails = default(string), string pathway = default(string), string cluster = default(string), DateTime createdDate = default(DateTime), DateTime? lastUpdated = null)
        {
            this.LarsCode = larsCode;
            this.ReferenceNumber = referenceNumber;
            this.Title = title;
            this.Status = status;
            this.Url = url;
            this.StandardPageUrl = standardPageUrl;
            this.OverviewOfRole = overviewOfRole;
            this.Level = level;
            this.TypicalDuration = typicalDuration;
            this.MaxFunding = maxFunding;
            this.Route = route;
            this.Keywords = keywords;
            this.JobRoles = jobRoles;
            this.EntryRequirements = entryRequirements;
            this.Qualifications = qualifications;
            this.AssessmentPlanUrl = assessmentPlanUrl;
            this.Ssa1 = ssa1;
            this.Ssa2 = ssa2;
            this.Version = version;
            this.StandardOccupationalCode = standardOccupationalCode;
            this.OccupationalStandardUrl = occupationalStandardUrl;
            this.OccupationalSummary = occupationalSummary;
            this.Duties = duties;
            this.Knowledges = knowledges;
            this.Behaviours = behaviours;
            this.Skills = skills;
            this.Options = options;
            this.ProfessionalRecognition = professionalRecognition;
            this.ProposalApproved = proposalApproved;
            this.StandardApproved = standardApproved;
            this.EpaApprovalDate = epaApprovalDate;
            this.FundingApprovalDate = fundingApprovalDate;
            this.EQAProvider = eQAProvider;
            this.ApprovedForDelivery = approvedForDelivery;
            this.IntegratedDegree = integratedDegree;
            this.TbReference = tbReference;
            this.TbMainContact = tbMainContact;
            this.InvolvedEmployers = involvedEmployers;
            this.Regulated = regulated;
            this.RegulatedBody = regulatedBody;
            this.RegulationDetail = regulationDetail;
            this.CoreAndOptions = coreAndOptions;
            this.TypicalJobTitles = typicalJobTitles;
            this.EnglishAndMathsQualifications = englishAndMathsQualifications;
            this.ReviewDetails = reviewDetails;
            this.Pathway = pathway;
            this.Cluster = cluster;
            this.CreatedDate = createdDate;
            this.LastUpdated = lastUpdated;
        }
        
        /// <summary>
        /// Gets or Sets LarsCode
        /// </summary>
        [DataMember(Name="larsCode", EmitDefaultValue=false)]
        public int LarsCode { get; set; }

        /// <summary>
        /// Gets or Sets ReferenceNumber
        /// </summary>
        [DataMember(Name="referenceNumber", EmitDefaultValue=false)]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// Gets or Sets Url
        /// </summary>
        [DataMember(Name="url", EmitDefaultValue=false)]
        public string Url { get; set; }

        /// <summary>
        /// Gets or Sets StandardPageUrl
        /// </summary>
        [DataMember(Name="standardPageUrl", EmitDefaultValue=false)]
        public string StandardPageUrl { get; set; }

        /// <summary>
        /// Gets or Sets OverviewOfRole
        /// </summary>
        [DataMember(Name="overviewOfRole", EmitDefaultValue=false)]
        public string OverviewOfRole { get; set; }

        /// <summary>
        /// Gets or Sets Level
        /// </summary>
        [DataMember(Name="level", EmitDefaultValue=false)]
        public decimal Level { get; set; }

        /// <summary>
        /// Gets or Sets TypicalDuration
        /// </summary>
        [DataMember(Name="typicalDuration", EmitDefaultValue=false)]
        public int TypicalDuration { get; set; }

        /// <summary>
        /// Gets or Sets MaxFunding
        /// </summary>
        [DataMember(Name="maxFunding", EmitDefaultValue=false)]
        public int MaxFunding { get; set; }

        /// <summary>
        /// Gets or Sets Route
        /// </summary>
        [DataMember(Name="route", EmitDefaultValue=false)]
        public string Route { get; set; }

        /// <summary>
        /// Gets or Sets Keywords
        /// </summary>
        [DataMember(Name="keywords", EmitDefaultValue=false)]
        public List<string> Keywords { get; set; }

        /// <summary>
        /// Gets or Sets JobRoles
        /// </summary>
        [DataMember(Name="jobRoles", EmitDefaultValue=false)]
        public List<string> JobRoles { get; set; }

        /// <summary>
        /// Gets or Sets EntryRequirements
        /// </summary>
        [DataMember(Name="entryRequirements", EmitDefaultValue=false)]
        public string EntryRequirements { get; set; }

        /// <summary>
        /// Gets or Sets Qualifications
        /// </summary>
        [DataMember(Name="qualifications", EmitDefaultValue=false)]
        public string Qualifications { get; set; }

        /// <summary>
        /// Gets or Sets AssessmentPlanUrl
        /// </summary>
        [DataMember(Name="assessmentPlanUrl", EmitDefaultValue=false)]
        public string AssessmentPlanUrl { get; set; }

        /// <summary>
        /// Gets or Sets Ssa1
        /// </summary>
        [DataMember(Name="ssa1", EmitDefaultValue=false)]
        public string Ssa1 { get; set; }

        /// <summary>
        /// Gets or Sets Ssa2
        /// </summary>
        [DataMember(Name="ssa2", EmitDefaultValue=false)]
        public string Ssa2 { get; set; }

        /// <summary>
        /// Gets or Sets Version
        /// </summary>
        [DataMember(Name="version", EmitDefaultValue=false)]
        public string Version { get; set; }

        /// <summary>
        /// Gets or Sets StandardInformation
        /// </summary>
        [DataMember(Name="standardInformation", EmitDefaultValue=false)]
        public string StandardInformation { get; private set; }

        /// <summary>
        /// Gets or Sets StandardOccupationalCode
        /// </summary>
        [DataMember(Name="standardOccupationalCode", EmitDefaultValue=false)]
        public string StandardOccupationalCode { get; set; }

        /// <summary>
        /// Gets or Sets OccupationalStandardUrl
        /// </summary>
        [DataMember(Name="occupationalStandardUrl", EmitDefaultValue=false)]
        public string OccupationalStandardUrl { get; set; }

        /// <summary>
        /// Gets or Sets OccupationalSummary
        /// </summary>
        [DataMember(Name="occupationalSummary", EmitDefaultValue=false)]
        public string OccupationalSummary { get; set; }

        /// <summary>
        /// Gets or Sets Duties
        /// </summary>
        [DataMember(Name="duties", EmitDefaultValue=false)]
        public List<ApiDutyDataModel> Duties { get; set; }

        /// <summary>
        /// Gets or Sets Knowledges
        /// </summary>
        [DataMember(Name="knowledges", EmitDefaultValue=false)]
        public List<ApiKnowledgeDataModel> Knowledges { get; set; }

        /// <summary>
        /// Gets or Sets Behaviours
        /// </summary>
        [DataMember(Name="behaviours", EmitDefaultValue=false)]
        public List<ApiBehaviourDataModel> Behaviours { get; set; }

        /// <summary>
        /// Gets or Sets Skills
        /// </summary>
        [DataMember(Name="skills", EmitDefaultValue=false)]
        public List<ApiSkillDataModel> Skills { get; set; }

        /// <summary>
        /// Gets or Sets Options
        /// </summary>
        [DataMember(Name="options", EmitDefaultValue=false)]
        public List<ApiOptionDataModel> Options { get; set; }

        /// <summary>
        /// Gets or Sets ProfessionalRecognition
        /// </summary>
        [DataMember(Name="professionalRecognition", EmitDefaultValue=false)]
        public List<ApiProfessionalRecognition> ProfessionalRecognition { get; set; }

        /// <summary>
        /// Gets or Sets ProposalApproved
        /// </summary>
        [DataMember(Name="proposalApproved", EmitDefaultValue=false)]
        public DateTime? ProposalApproved { get; set; }

        /// <summary>
        /// Gets or Sets StandardApproved
        /// </summary>
        [DataMember(Name="standardApproved", EmitDefaultValue=false)]
        public DateTime? StandardApproved { get; set; }

        /// <summary>
        /// Gets or Sets EpaApprovalDate
        /// </summary>
        [DataMember(Name="epaApprovalDate", EmitDefaultValue=false)]
        public DateTime? EpaApprovalDate { get; set; }

        /// <summary>
        /// Gets or Sets FundingApprovalDate
        /// </summary>
        [DataMember(Name="fundingApprovalDate", EmitDefaultValue=false)]
        public DateTime? FundingApprovalDate { get; set; }

        /// <summary>
        /// Gets or Sets EQAProvider
        /// </summary>
        [DataMember(Name="eQAProvider", EmitDefaultValue=false)]
        public ApiEqaProviderDataModel EQAProvider { get; set; }

        /// <summary>
        /// Gets or Sets ApprovedForDelivery
        /// </summary>
        [DataMember(Name="approvedForDelivery", EmitDefaultValue=false)]
        public DateTime? ApprovedForDelivery { get; set; }

        /// <summary>
        /// Gets or Sets IntegratedDegree
        /// </summary>
        [DataMember(Name="integratedDegree", EmitDefaultValue=false)]
        public string IntegratedDegree { get; set; }

        /// <summary>
        /// Gets or Sets TbReference
        /// </summary>
        [DataMember(Name="tbReference", EmitDefaultValue=false)]
        public string TbReference { get; set; }

        /// <summary>
        /// Gets or Sets TbMainContact
        /// </summary>
        [DataMember(Name="tbMainContact", EmitDefaultValue=false)]
        public string TbMainContact { get; set; }

        /// <summary>
        /// Gets or Sets InvolvedEmployers
        /// </summary>
        [DataMember(Name="involvedEmployers", EmitDefaultValue=false)]
        public string InvolvedEmployers { get; set; }

        /// <summary>
        /// Gets or Sets Regulated
        /// </summary>
        [DataMember(Name="regulated", EmitDefaultValue=false)]
        public bool Regulated { get; set; }

        /// <summary>
        /// Gets or Sets RegulatedBody
        /// </summary>
        [DataMember(Name="regulatedBody", EmitDefaultValue=false)]
        public string RegulatedBody { get; set; }

        /// <summary>
        /// Gets or Sets RegulationDetail
        /// </summary>
        [DataMember(Name="regulationDetail", EmitDefaultValue=false)]
        public List<ApiRegulatedStandardData> RegulationDetail { get; set; }

        /// <summary>
        /// Gets or Sets CoreAndOptions
        /// </summary>
        [DataMember(Name="coreAndOptions", EmitDefaultValue=false)]
        public bool CoreAndOptions { get; set; }

        /// <summary>
        /// Gets or Sets TypicalJobTitles
        /// </summary>
        [DataMember(Name="typicalJobTitles", EmitDefaultValue=false)]
        public List<string> TypicalJobTitles { get; set; }

        /// <summary>
        /// Gets or Sets EnglishAndMathsQualifications
        /// </summary>
        [DataMember(Name="englishAndMathsQualifications", EmitDefaultValue=false)]
        public string EnglishAndMathsQualifications { get; set; }

        /// <summary>
        /// Gets or Sets ReviewDetails
        /// </summary>
        [DataMember(Name="reviewDetails", EmitDefaultValue=false)]
        public string ReviewDetails { get; set; }

        /// <summary>
        /// Gets or Sets Pathway
        /// </summary>
        [DataMember(Name="pathway", EmitDefaultValue=false)]
        public string Pathway { get; set; }

        /// <summary>
        /// Gets or Sets Cluster
        /// </summary>
        [DataMember(Name="cluster", EmitDefaultValue=false)]
        public string Cluster { get; set; }

        /// <summary>
        /// Gets or Sets CreatedDate
        /// </summary>
        [DataMember(Name="createdDate", EmitDefaultValue=false)]
        public DateTime CreatedDate { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdated
        /// </summary>
        [DataMember(Name="lastUpdated", EmitDefaultValue=false)]
        public DateTime? LastUpdated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiApprenticeshipStandard {\n");
            sb.Append("  LarsCode: ").Append(LarsCode).Append("\n");
            sb.Append("  ReferenceNumber: ").Append(ReferenceNumber).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  StandardPageUrl: ").Append(StandardPageUrl).Append("\n");
            sb.Append("  OverviewOfRole: ").Append(OverviewOfRole).Append("\n");
            sb.Append("  Level: ").Append(Level).Append("\n");
            sb.Append("  TypicalDuration: ").Append(TypicalDuration).Append("\n");
            sb.Append("  MaxFunding: ").Append(MaxFunding).Append("\n");
            sb.Append("  Route: ").Append(Route).Append("\n");
            sb.Append("  Keywords: ").Append(Keywords).Append("\n");
            sb.Append("  JobRoles: ").Append(JobRoles).Append("\n");
            sb.Append("  EntryRequirements: ").Append(EntryRequirements).Append("\n");
            sb.Append("  Qualifications: ").Append(Qualifications).Append("\n");
            sb.Append("  AssessmentPlanUrl: ").Append(AssessmentPlanUrl).Append("\n");
            sb.Append("  Ssa1: ").Append(Ssa1).Append("\n");
            sb.Append("  Ssa2: ").Append(Ssa2).Append("\n");
            sb.Append("  Version: ").Append(Version).Append("\n");
            sb.Append("  StandardInformation: ").Append(StandardInformation).Append("\n");
            sb.Append("  StandardOccupationalCode: ").Append(StandardOccupationalCode).Append("\n");
            sb.Append("  OccupationalStandardUrl: ").Append(OccupationalStandardUrl).Append("\n");
            sb.Append("  OccupationalSummary: ").Append(OccupationalSummary).Append("\n");
            sb.Append("  Duties: ").Append(Duties).Append("\n");
            sb.Append("  Knowledges: ").Append(Knowledges).Append("\n");
            sb.Append("  Behaviours: ").Append(Behaviours).Append("\n");
            sb.Append("  Skills: ").Append(Skills).Append("\n");
            sb.Append("  Options: ").Append(Options).Append("\n");
            sb.Append("  ProfessionalRecognition: ").Append(ProfessionalRecognition).Append("\n");
            sb.Append("  ProposalApproved: ").Append(ProposalApproved).Append("\n");
            sb.Append("  StandardApproved: ").Append(StandardApproved).Append("\n");
            sb.Append("  EpaApprovalDate: ").Append(EpaApprovalDate).Append("\n");
            sb.Append("  FundingApprovalDate: ").Append(FundingApprovalDate).Append("\n");
            sb.Append("  EQAProvider: ").Append(EQAProvider).Append("\n");
            sb.Append("  ApprovedForDelivery: ").Append(ApprovedForDelivery).Append("\n");
            sb.Append("  IntegratedDegree: ").Append(IntegratedDegree).Append("\n");
            sb.Append("  TbReference: ").Append(TbReference).Append("\n");
            sb.Append("  TbMainContact: ").Append(TbMainContact).Append("\n");
            sb.Append("  InvolvedEmployers: ").Append(InvolvedEmployers).Append("\n");
            sb.Append("  Regulated: ").Append(Regulated).Append("\n");
            sb.Append("  RegulatedBody: ").Append(RegulatedBody).Append("\n");
            sb.Append("  RegulationDetail: ").Append(RegulationDetail).Append("\n");
            sb.Append("  CoreAndOptions: ").Append(CoreAndOptions).Append("\n");
            sb.Append("  TypicalJobTitles: ").Append(TypicalJobTitles).Append("\n");
            sb.Append("  EnglishAndMathsQualifications: ").Append(EnglishAndMathsQualifications).Append("\n");
            sb.Append("  ReviewDetails: ").Append(ReviewDetails).Append("\n");
            sb.Append("  Pathway: ").Append(Pathway).Append("\n");
            sb.Append("  Cluster: ").Append(Cluster).Append("\n");
            sb.Append("  CreatedDate: ").Append(CreatedDate).Append("\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiApprenticeshipStandard);
        }

        /// <summary>
        /// Returns true if ApiApprenticeshipStandard instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiApprenticeshipStandard to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiApprenticeshipStandard input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LarsCode == input.LarsCode ||
                    this.LarsCode.Equals(input.LarsCode)
                ) && 
                (
                    this.ReferenceNumber == input.ReferenceNumber ||
                    (this.ReferenceNumber != null &&
                    this.ReferenceNumber.Equals(input.ReferenceNumber))
                ) && 
                (
                    this.Title == input.Title ||
                    (this.Title != null &&
                    this.Title.Equals(input.Title))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.StandardPageUrl == input.StandardPageUrl ||
                    (this.StandardPageUrl != null &&
                    this.StandardPageUrl.Equals(input.StandardPageUrl))
                ) && 
                (
                    this.OverviewOfRole == input.OverviewOfRole ||
                    (this.OverviewOfRole != null &&
                    this.OverviewOfRole.Equals(input.OverviewOfRole))
                ) && 
                (
                    this.Level == input.Level ||
                    this.Level.Equals(input.Level)
                ) && 
                (
                    this.TypicalDuration == input.TypicalDuration ||
                    this.TypicalDuration.Equals(input.TypicalDuration)
                ) && 
                (
                    this.MaxFunding == input.MaxFunding ||
                    this.MaxFunding.Equals(input.MaxFunding)
                ) && 
                (
                    this.Route == input.Route ||
                    (this.Route != null &&
                    this.Route.Equals(input.Route))
                ) && 
                (
                    this.Keywords == input.Keywords ||
                    this.Keywords != null &&
                    input.Keywords != null &&
                    this.Keywords.SequenceEqual(input.Keywords)
                ) && 
                (
                    this.JobRoles == input.JobRoles ||
                    this.JobRoles != null &&
                    input.JobRoles != null &&
                    this.JobRoles.SequenceEqual(input.JobRoles)
                ) && 
                (
                    this.EntryRequirements == input.EntryRequirements ||
                    (this.EntryRequirements != null &&
                    this.EntryRequirements.Equals(input.EntryRequirements))
                ) && 
                (
                    this.Qualifications == input.Qualifications ||
                    (this.Qualifications != null &&
                    this.Qualifications.Equals(input.Qualifications))
                ) && 
                (
                    this.AssessmentPlanUrl == input.AssessmentPlanUrl ||
                    (this.AssessmentPlanUrl != null &&
                    this.AssessmentPlanUrl.Equals(input.AssessmentPlanUrl))
                ) && 
                (
                    this.Ssa1 == input.Ssa1 ||
                    (this.Ssa1 != null &&
                    this.Ssa1.Equals(input.Ssa1))
                ) && 
                (
                    this.Ssa2 == input.Ssa2 ||
                    (this.Ssa2 != null &&
                    this.Ssa2.Equals(input.Ssa2))
                ) && 
                (
                    this.Version == input.Version ||
                    (this.Version != null &&
                    this.Version.Equals(input.Version))
                ) && 
                (
                    this.StandardInformation == input.StandardInformation ||
                    (this.StandardInformation != null &&
                    this.StandardInformation.Equals(input.StandardInformation))
                ) && 
                (
                    this.StandardOccupationalCode == input.StandardOccupationalCode ||
                    (this.StandardOccupationalCode != null &&
                    this.StandardOccupationalCode.Equals(input.StandardOccupationalCode))
                ) && 
                (
                    this.OccupationalStandardUrl == input.OccupationalStandardUrl ||
                    (this.OccupationalStandardUrl != null &&
                    this.OccupationalStandardUrl.Equals(input.OccupationalStandardUrl))
                ) && 
                (
                    this.OccupationalSummary == input.OccupationalSummary ||
                    (this.OccupationalSummary != null &&
                    this.OccupationalSummary.Equals(input.OccupationalSummary))
                ) && 
                (
                    this.Duties == input.Duties ||
                    this.Duties != null &&
                    input.Duties != null &&
                    this.Duties.SequenceEqual(input.Duties)
                ) && 
                (
                    this.Knowledges == input.Knowledges ||
                    this.Knowledges != null &&
                    input.Knowledges != null &&
                    this.Knowledges.SequenceEqual(input.Knowledges)
                ) && 
                (
                    this.Behaviours == input.Behaviours ||
                    this.Behaviours != null &&
                    input.Behaviours != null &&
                    this.Behaviours.SequenceEqual(input.Behaviours)
                ) && 
                (
                    this.Skills == input.Skills ||
                    this.Skills != null &&
                    input.Skills != null &&
                    this.Skills.SequenceEqual(input.Skills)
                ) && 
                (
                    this.Options == input.Options ||
                    this.Options != null &&
                    input.Options != null &&
                    this.Options.SequenceEqual(input.Options)
                ) && 
                (
                    this.ProfessionalRecognition == input.ProfessionalRecognition ||
                    this.ProfessionalRecognition != null &&
                    input.ProfessionalRecognition != null &&
                    this.ProfessionalRecognition.SequenceEqual(input.ProfessionalRecognition)
                ) && 
                (
                    this.ProposalApproved == input.ProposalApproved ||
                    (this.ProposalApproved != null &&
                    this.ProposalApproved.Equals(input.ProposalApproved))
                ) && 
                (
                    this.StandardApproved == input.StandardApproved ||
                    (this.StandardApproved != null &&
                    this.StandardApproved.Equals(input.StandardApproved))
                ) && 
                (
                    this.EpaApprovalDate == input.EpaApprovalDate ||
                    (this.EpaApprovalDate != null &&
                    this.EpaApprovalDate.Equals(input.EpaApprovalDate))
                ) && 
                (
                    this.FundingApprovalDate == input.FundingApprovalDate ||
                    (this.FundingApprovalDate != null &&
                    this.FundingApprovalDate.Equals(input.FundingApprovalDate))
                ) && 
                (
                    this.EQAProvider == input.EQAProvider ||
                    (this.EQAProvider != null &&
                    this.EQAProvider.Equals(input.EQAProvider))
                ) && 
                (
                    this.ApprovedForDelivery == input.ApprovedForDelivery ||
                    (this.ApprovedForDelivery != null &&
                    this.ApprovedForDelivery.Equals(input.ApprovedForDelivery))
                ) && 
                (
                    this.IntegratedDegree == input.IntegratedDegree ||
                    (this.IntegratedDegree != null &&
                    this.IntegratedDegree.Equals(input.IntegratedDegree))
                ) && 
                (
                    this.TbReference == input.TbReference ||
                    (this.TbReference != null &&
                    this.TbReference.Equals(input.TbReference))
                ) && 
                (
                    this.TbMainContact == input.TbMainContact ||
                    (this.TbMainContact != null &&
                    this.TbMainContact.Equals(input.TbMainContact))
                ) && 
                (
                    this.InvolvedEmployers == input.InvolvedEmployers ||
                    (this.InvolvedEmployers != null &&
                    this.InvolvedEmployers.Equals(input.InvolvedEmployers))
                ) && 
                (
                    this.Regulated == input.Regulated ||
                    this.Regulated.Equals(input.Regulated)
                ) && 
                (
                    this.RegulatedBody == input.RegulatedBody ||
                    (this.RegulatedBody != null &&
                    this.RegulatedBody.Equals(input.RegulatedBody))
                ) && 
                (
                    this.RegulationDetail == input.RegulationDetail ||
                    this.RegulationDetail != null &&
                    input.RegulationDetail != null &&
                    this.RegulationDetail.SequenceEqual(input.RegulationDetail)
                ) && 
                (
                    this.CoreAndOptions == input.CoreAndOptions ||
                    this.CoreAndOptions.Equals(input.CoreAndOptions)
                ) && 
                (
                    this.TypicalJobTitles == input.TypicalJobTitles ||
                    this.TypicalJobTitles != null &&
                    input.TypicalJobTitles != null &&
                    this.TypicalJobTitles.SequenceEqual(input.TypicalJobTitles)
                ) && 
                (
                    this.EnglishAndMathsQualifications == input.EnglishAndMathsQualifications ||
                    (this.EnglishAndMathsQualifications != null &&
                    this.EnglishAndMathsQualifications.Equals(input.EnglishAndMathsQualifications))
                ) && 
                (
                    this.ReviewDetails == input.ReviewDetails ||
                    (this.ReviewDetails != null &&
                    this.ReviewDetails.Equals(input.ReviewDetails))
                ) && 
                (
                    this.Pathway == input.Pathway ||
                    (this.Pathway != null &&
                    this.Pathway.Equals(input.Pathway))
                ) && 
                (
                    this.Cluster == input.Cluster ||
                    (this.Cluster != null &&
                    this.Cluster.Equals(input.Cluster))
                ) && 
                (
                    this.CreatedDate == input.CreatedDate ||
                    (this.CreatedDate != null &&
                    this.CreatedDate.Equals(input.CreatedDate))
                ) && 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                hashCode = hashCode * 59 + this.LarsCode.GetHashCode();
                if (this.ReferenceNumber != null)
                    hashCode = hashCode * 59 + this.ReferenceNumber.GetHashCode();
                if (this.Title != null)
                    hashCode = hashCode * 59 + this.Title.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.Url != null)
                    hashCode = hashCode * 59 + this.Url.GetHashCode();
                if (this.StandardPageUrl != null)
                    hashCode = hashCode * 59 + this.StandardPageUrl.GetHashCode();
                if (this.OverviewOfRole != null)
                    hashCode = hashCode * 59 + this.OverviewOfRole.GetHashCode();
                hashCode = hashCode * 59 + this.Level.GetHashCode();
                hashCode = hashCode * 59 + this.TypicalDuration.GetHashCode();
                hashCode = hashCode * 59 + this.MaxFunding.GetHashCode();
                if (this.Route != null)
                    hashCode = hashCode * 59 + this.Route.GetHashCode();
                if (this.Keywords != null)
                    hashCode = hashCode * 59 + this.Keywords.GetHashCode();
                if (this.JobRoles != null)
                    hashCode = hashCode * 59 + this.JobRoles.GetHashCode();
                if (this.EntryRequirements != null)
                    hashCode = hashCode * 59 + this.EntryRequirements.GetHashCode();
                if (this.Qualifications != null)
                    hashCode = hashCode * 59 + this.Qualifications.GetHashCode();
                if (this.AssessmentPlanUrl != null)
                    hashCode = hashCode * 59 + this.AssessmentPlanUrl.GetHashCode();
                if (this.Ssa1 != null)
                    hashCode = hashCode * 59 + this.Ssa1.GetHashCode();
                if (this.Ssa2 != null)
                    hashCode = hashCode * 59 + this.Ssa2.GetHashCode();
                if (this.Version != null)
                    hashCode = hashCode * 59 + this.Version.GetHashCode();
                if (this.StandardInformation != null)
                    hashCode = hashCode * 59 + this.StandardInformation.GetHashCode();
                if (this.StandardOccupationalCode != null)
                    hashCode = hashCode * 59 + this.StandardOccupationalCode.GetHashCode();
                if (this.OccupationalStandardUrl != null)
                    hashCode = hashCode * 59 + this.OccupationalStandardUrl.GetHashCode();
                if (this.OccupationalSummary != null)
                    hashCode = hashCode * 59 + this.OccupationalSummary.GetHashCode();
                if (this.Duties != null)
                    hashCode = hashCode * 59 + this.Duties.GetHashCode();
                if (this.Knowledges != null)
                    hashCode = hashCode * 59 + this.Knowledges.GetHashCode();
                if (this.Behaviours != null)
                    hashCode = hashCode * 59 + this.Behaviours.GetHashCode();
                if (this.Skills != null)
                    hashCode = hashCode * 59 + this.Skills.GetHashCode();
                if (this.Options != null)
                    hashCode = hashCode * 59 + this.Options.GetHashCode();
                if (this.ProfessionalRecognition != null)
                    hashCode = hashCode * 59 + this.ProfessionalRecognition.GetHashCode();
                if (this.ProposalApproved != null)
                    hashCode = hashCode * 59 + this.ProposalApproved.GetHashCode();
                if (this.StandardApproved != null)
                    hashCode = hashCode * 59 + this.StandardApproved.GetHashCode();
                if (this.EpaApprovalDate != null)
                    hashCode = hashCode * 59 + this.EpaApprovalDate.GetHashCode();
                if (this.FundingApprovalDate != null)
                    hashCode = hashCode * 59 + this.FundingApprovalDate.GetHashCode();
                if (this.EQAProvider != null)
                    hashCode = hashCode * 59 + this.EQAProvider.GetHashCode();
                if (this.ApprovedForDelivery != null)
                    hashCode = hashCode * 59 + this.ApprovedForDelivery.GetHashCode();
                if (this.IntegratedDegree != null)
                    hashCode = hashCode * 59 + this.IntegratedDegree.GetHashCode();
                if (this.TbReference != null)
                    hashCode = hashCode * 59 + this.TbReference.GetHashCode();
                if (this.TbMainContact != null)
                    hashCode = hashCode * 59 + this.TbMainContact.GetHashCode();
                if (this.InvolvedEmployers != null)
                    hashCode = hashCode * 59 + this.InvolvedEmployers.GetHashCode();
                hashCode = hashCode * 59 + this.Regulated.GetHashCode();
                if (this.RegulatedBody != null)
                    hashCode = hashCode * 59 + this.RegulatedBody.GetHashCode();
                if (this.RegulationDetail != null)
                    hashCode = hashCode * 59 + this.RegulationDetail.GetHashCode();
                hashCode = hashCode * 59 + this.CoreAndOptions.GetHashCode();
                if (this.TypicalJobTitles != null)
                    hashCode = hashCode * 59 + this.TypicalJobTitles.GetHashCode();
                if (this.EnglishAndMathsQualifications != null)
                    hashCode = hashCode * 59 + this.EnglishAndMathsQualifications.GetHashCode();
                if (this.ReviewDetails != null)
                    hashCode = hashCode * 59 + this.ReviewDetails.GetHashCode();
                if (this.Pathway != null)
                    hashCode = hashCode * 59 + this.Pathway.GetHashCode();
                if (this.Cluster != null)
                    hashCode = hashCode * 59 + this.Cluster.GetHashCode();
                if (this.CreatedDate != null)
                    hashCode = hashCode * 59 + this.CreatedDate.GetHashCode();
                if (this.LastUpdated != null)
                    hashCode = hashCode * 59 + this.LastUpdated.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
