/* 
 * IfA Standards API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Ifa.Api.Model
{
    /// <summary>
    /// ApiBehaviourDataModel
    /// </summary>
    [DataContract]
    public partial class ApiBehaviourDataModel :  IEquatable<ApiBehaviourDataModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiBehaviourDataModel" /> class.
        /// </summary>
        /// <param name="detail">detail.</param>
        /// <param name="behaviourId">behaviourId.</param>
        public ApiBehaviourDataModel(string detail = default(string), string behaviourId = default(string))
        {
            this.Detail = detail;
            this.BehaviourId = behaviourId;
        }
        
        /// <summary>
        /// Gets or Sets Detail
        /// </summary>
        [DataMember(Name="detail", EmitDefaultValue=false)]
        public string Detail { get; set; }

        /// <summary>
        /// Gets or Sets BehaviourId
        /// </summary>
        [DataMember(Name="behaviourId", EmitDefaultValue=false)]
        public string BehaviourId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiBehaviourDataModel {\n");
            sb.Append("  Detail: ").Append(Detail).Append("\n");
            sb.Append("  BehaviourId: ").Append(BehaviourId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiBehaviourDataModel);
        }

        /// <summary>
        /// Returns true if ApiBehaviourDataModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiBehaviourDataModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiBehaviourDataModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Detail == input.Detail ||
                    (this.Detail != null &&
                    this.Detail.Equals(input.Detail))
                ) && 
                (
                    this.BehaviourId == input.BehaviourId ||
                    (this.BehaviourId != null &&
                    this.BehaviourId.Equals(input.BehaviourId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Detail != null)
                    hashCode = hashCode * 59 + this.Detail.GetHashCode();
                if (this.BehaviourId != null)
                    hashCode = hashCode * 59 + this.BehaviourId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
