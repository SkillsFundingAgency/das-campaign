@using Sfa.Das.Sas.Shared.Components.ViewModels.Css.Interfaces
@model Tuple<Sfa.Das.Sas.Shared.Components.ViewModels.TrainingProvider.SearchResults.TrainingProviderSearchResultsItem, Sfa.Das.Sas.Shared.Components.ViewModels.TrainingProvider.Search.TrainingProviderSearchViewModel>
@inject ICssViewModel CssViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var defaultDistanceText = Model.Item1.Distance + " miles away";
    var distanceText = Model.Item1.HasOtherLocations ? defaultDistanceText + " - Available at other locations" : defaultDistanceText;
}

<div id="@Model.Item1.Ukprn" class="fiu-results-panel">
    <h2 class="govuk-heading-m fiu-results-panel__heading">
        <a class="fiu-link fiu-link--employers"" href="/TrainingProvider/Details?ukprn=@Model.Item1.Ukprn&apprenticeshipId=@Model.Item2.ApprenticeshipId&LocationId=@Model.Item1.LocationId&postCode=@Model.Item2.Postcode">
            @Model.Item1.Name
        </a> 
        @if (Model.Item1.NationalProvider)
        {
            <span class="fiu-tag fiu-tag--employers">National</span>
        }
    </h2>
    <dl class="fiu-table-list">
        <dt class="fiu-table-list__th">Distance</dt>
        <dd class="fiu-table-list__td">@distanceText</dd>

        @if (!string.IsNullOrWhiteSpace(Model.Item1.LocationAddress.AddressWithoutPostCode))
        {
            <dt class="fiu-table-list__th">Address</dt>
            <dd class="fiu-table-list__td">@Model.Item1.LocationAddress.AddressWithoutPostCode @Model.Item1.LocationAddress.PostCode &nbsp;</dd>
        }

        <dt class="fiu-table-list__th">Employer satisfaction</dt>
        <dd class="fiu-table-list__td">@FormatPercentageValues(Model.Item1.EmployerSatisfaction)</dd>
        <dt class="fiu-table-list__th">Learner satisfaction</dt>
        <dd class="fiu-table-list__td">@FormatPercentageValues(Model.Item1.LearnerSatisfaction)</dd>
        <dt class="fiu-table-list__th">Achievement rate</dt>
        <dd class="fiu-table-list__td">@FormatPercentageValues(Model.Item1.OverallAchievementRate)</dd>
    </dl>
    <div class="fiu-favourite-bar">
        @await Component.InvokeAsync("AddOrRemoveFromBasket", new { apprenticeshipId = Model.Item2.ApprenticeshipId, ukprn = Model.Item1.Ukprn, locationId = Model.Item1.LocationId })  
    </div>
</div>



@functions
{
    string FormatPercentageValues(double? value)
    {
        if (!value.HasValue)
            return "no data available";

        return value.Value + "%";
    }
}