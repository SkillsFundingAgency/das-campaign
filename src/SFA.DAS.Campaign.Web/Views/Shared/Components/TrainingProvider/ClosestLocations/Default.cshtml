@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Sfa.Das.Sas.Shared.Components.ViewModels.Css.Interfaces
@using Humanizer
@model Sfa.Das.Sas.Shared.Components.ViewModels.TrainingProvider.ClosestLocations.ClosestLocationsViewModel
@inject ICssViewModel CssViewModel

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <h2 class="govuk-heading-l govuk-!-margin-top-4">
            Nearest @("location".ToQuantity(Model.Locations.Count, ShowQuantityAs.None)) for @Model.ProviderName
        </h2>

        <form asp-controller="Basket" asp-action="AddProviderFromDetails" method="post">

            <input type="hidden" asp-for="@Model.ApprenticeshipId" />
            <input type="hidden" asp-for="@Model.LocationId" />
            <input type="hidden" asp-for="@Model.Ukprn" />
            <input type="hidden" asp-for="@Model.PostCode" />

            @for (int i = 0; i < Model.Locations.Count; i++)
            {
            var item = @Model.Locations[i];

            <div class="fiu-panel fiu-panel--left-align fiu-panel--min-padding">

                <div class="fiu-provider-details-locations">
                    @if (i == 0)
                    {
                        <div class="fiu-provider-details-locations__tag">
                            <strong class="fiu-tag fiu-tag--employers">Nearest</strong>
                        </div>
                    }

                    <dl class="fiu-provider-details-locations__list">
                        <dt class="fiu-provider-details-locations__th">Distance</dt>
                        <dd class="fiu-provider-details-locations__td">@Model.Locations[i].Distance miles away</dd>

                        <dt class="fiu-provider-details-locations__th">Address</dt>
                        @if (string.IsNullOrWhiteSpace(item.AddressWithoutPostCode))
                        {
                            <dd class="fiu-provider-details-locations__td">@item.PostCode</dd>
                        }
                        else
                        {
                            <dd class="fiu-provider-details-locations__td">@item.AddressWithoutPostCode, @item.PostCode</dd>
                        }
                    </dl>

                    <div class="fiu-favourite-bar fiu-favourite-bar--employers">
                        @await Component.InvokeAsync("AddOrRemoveFromBasket", new { apprenticeshipId = Model.ApprenticeshipId, ukprn = Model.Ukprn, locationId = item.LocationId })
                    </div>
                </div>

            </div>
            }

        </form>

        <p class="govuk-body-m govuk-!-margin-top-6">
            <a asp-controller="Fat" asp-action="Apprenticeship" asp-route-Id="@Model.ApprenticeshipId" class="fiu-link fiu-link--employers">
                Search for training providers in a different location
            </a>
        </p>

    </div>
</div>
