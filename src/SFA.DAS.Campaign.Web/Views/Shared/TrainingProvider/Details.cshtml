@using System.Web
@using Sfa.Das.Sas.Shared.Components.ViewModels
@using Sfa.Das.Sas.Shared.Components.ViewModels.Css.Interfaces
@using Microsoft.AspNetCore.Html

@model Sfa.Das.Sas.Shared.Components.ViewModels.TrainingProviderDetailQueryViewModel

@{

    System.Text.Encodings.Web.HtmlEncoder hEncoder = System.Text.Encodings.Web.HtmlEncoder.Default;
    var pageHeading = new System.IO.StringWriter();
    Component.InvokeAsync("TrainingProviderTitle", new { providerDetailsQueryModel = Model }).Result.WriteTo(pageHeading, hEncoder);
    var pageHeadingStr = new HtmlContentBuilder().AppendHtml(pageHeading.ToString().Trim());

    ViewBag.MetaTitle = "Training provider details";
    ViewBag.PageTitle = pageHeadingStr;
    Layout = "Redesign_Layout_EmployersHub";
}
<span class="fiu-header-content-spacer"></span>
<section class="fiu-width-container govuk-!-margin-top-8">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model, ViewType = ViewType.Summary })

            @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model })

        </div>

        <div class="govuk-grid-column-one-third">

            <div class="fiu-panel fiu-panel--left-align fiu-panel--min-padding">

                @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model, ViewType = ViewType.Contact })

            </div>

        </div>
    </div>
</section>

<div class="fiu-width-container">
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <hr class="fiu-section-break fiu-section-break--l">
    </div>
  </div>
</div>

<section class="fiu-width-container">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

          @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model, ViewType = ViewType.Feedback })

          @if (!string.IsNullOrEmpty(Model.PostCode))
          {
              @await Component.InvokeAsync("ClosestLocations", new { Model.ApprenticeshipId, Model.Ukprn, Model.PostCode })
          }

        </div>
    </div>
</section>

<div class="fiu-width-container">
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
      <hr class="fiu-section-break fiu-section-break--l">
    </div>
  </div>
</div>
