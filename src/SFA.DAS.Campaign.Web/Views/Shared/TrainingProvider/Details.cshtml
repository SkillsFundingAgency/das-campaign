@using Sfa.Das.Sas.Shared.Components.ViewModels
@using Sfa.Das.Sas.Shared.Components.ViewModels.Css.Interfaces
@model Sfa.Das.Sas.Shared.Components.ViewModels.TrainingProviderDetailQueryViewModel
@inject ICssViewModel CssViewModel
@{
    ViewBag.Title = "TRAINING PROVIDER RESULTS";
    ViewBag.MetaTitle = "TRAINING PROVIDER RESULTS";
    ViewBag.PageID = "employer-find-an-apprenticeship";
    ViewBag.Section = "employer";
    ViewBag.MetaDesc = "";
    Layout = "_LayoutContentFull";
    ViewBag.PageNavIndex = 3;

}
@section HeroHeading {
    @await Component.InvokeAsync("TrainingProviderHeading", new { detailsQueryModel = Model })
}

<div class="grid-row">
    <div class="grid-column-one-third grid-column--pull-right">
        <div class="sidebar-panel sidebar-panel--employer">
            <div class="sidebar-panel__content">
                
                @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model, ViewType = ViewType.Contact })
            </div>
        </div>
    </div>
    <div class="grid-column-two-thirds">
        <div class="page">
            @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model, ViewType = ViewType.Summary })
            @await Component.InvokeAsync("TrainingProviderDetails", new { searchQueryModel = Model })

            @if (!string.IsNullOrEmpty(Model.PostCode))
            {
                @await Component.InvokeAsync("ClosestLocations", new { Model.ApprenticeshipId, Model.Ukprn, Model.PostCode })
            }
        </div>
    </div>
</div>

