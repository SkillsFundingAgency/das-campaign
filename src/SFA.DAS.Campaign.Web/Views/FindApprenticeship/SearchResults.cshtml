@using SFA.DAS.Campaign.Web.ViewComponents.GoogleMaps
@using SFA.DAS.Campaign.Web.ViewComponents.Sidebar
@model SearchResultsViewModel

@{
    ViewBag.Title = "Find an apprenticeship";
    ViewBag.PageID = "find-an-apprentice";
    ViewBag.Section = "apprentice";
    ViewBag.MetaTitle = "Find an apprenticeship";
    ViewBag.MetaDesc = "";
    Layout = "_LayoutContentSidebar";
}

<div class="grid-row">
    <div class="column-one-third">

        <br />
        @{ await Html.RenderPartialAsync("_searchFilter", Model.filterModel); }
    </div>
    <div class="column-two-thirds">
        <ol id="vacancy-search-results" class="search-results-list">

            @foreach (var vacancySearchResultItem in Model.Results)
            {

                await Html.RenderPartialAsync("_searchResults", vacancySearchResultItem);

            }

        </ol>
    </div>
</div>

@section Scripts
    {
    <script defer src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>

    <script defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDvjlbjx6_-sz4utE2SVVNwc63PlUM_MLE&callback=DASFrontend.initMaps"
            type="text/javascript"></script>
    <script defer src="/campaign/js/infobox.js"></script>


}

@section Sidebar
    {
    @await Component.InvokeAsync("Sidebar", new { headerType = SidebarHeaderType.GoogleMap, googleMapsOptions = new GoogleMapsViewModel(Model.StaticMapUrl) { Latitude = Model.Location.Latitude, Longitude = Model.Location.Longitude, Distance = Model.Distance, Postcode = Model.Postcode} })
}