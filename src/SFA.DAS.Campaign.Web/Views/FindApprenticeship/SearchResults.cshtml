@using SFA.DAS.Campaign.Domain.Enums
@model SearchResultsViewModel

@{
    ViewBag.Title = "Browse apprenticeships before you apply";
    ViewBag.PageCaption = "Browse apprenticeships before you apply";
    ViewBag.PageTitle = "Results";
    ViewBag.PageID = "apprentice-search-results";
    ViewBag.LandingPageTitle = ViewBag.Title;
    ViewBag.LandingPageSlug = "find-an-apprenticeship";
    ViewBag.HideCategoryTag = true;
    Layout = "Redesign_Layout_ApprenticesHub";

}

<span class="fiu-header-content-spacer"></span>
<div class="fiu-width-container">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">

            @{
                if (Model.TotalResults > 0)
                {
                    var findApprenticeshipSearchModel = new FindApprenticeshipSearchModel() { Distance = Model.Distance, Postcode = Model.Postcode, Routes = Model.Routes };
                    await Html.RenderPartialAsync("./Components/Form/faa-update-results", findApprenticeshipSearchModel);
                }
            }

            <span class="fiu-visually-hidden" aria-hidden="true">
                There are
                <span id="tag-search-count">@Model.TotalResults</span>
                <span id="tag-search-keyword">@Model.Route</span>
                apprenticeships within
                <span id="tag-search-distance">@Model.Distance</span>
                miles of
                <span id="tag-search-postcode">@Model.Postcode</span>.
            </span>


            @if (Model.Country == Country.England)
            {
                @if (Model.TotalResults > 0)
                {
                    <div id="resultsSummary" class="fiu-results-summary">
                        <p class="fiu-results-summary__content">
                            Here are the
                            @if (Model.TotalResults >= 10)
                            {
                                <b>10</b>
                            }
                            else
                            {
                                <b>@Model.TotalResults</b>
                            }
                            apprenticeships nearest to your postcode.
                        </p>
                    </div>

                    @foreach (var vacancySearchResultItem in Model.Results)
                    {
                        await Html.RenderPartialAsync("_searchResults", vacancySearchResultItem);
                    }

                }
                else
                {
                    <h2 class="govuk-heading-l">
                        No results
                    </h2>

                    <p class="govuk-body">You can select a different interest or try a different postcode. </p>

                    <p class="govuk-body">If that doesn’t work, use <a href="https://www.findapprenticeship.service.gov.uk/apprenticeships?ApprenticeshipLevel=All&Hash=0&Location=@Model.Postcode&LocationType=NonNational&PageNumber=1&ResultsPerPage=5&SearchAction=Search&SearchField=All&SearchMode=Keyword&SortType=Relevancy&WithinDistance=@Model.Distance&DisabilityConfidentOnly=False" class="fiu-link" rel="external" target="_blank">find an apprenticeship<span class="fiu-visually-hidden"> (Opens in a new window)</span></a> to refine your search further.</p>
                }

            }
            else
            {
                <h2 class="govuk-heading-l"> Looking for apprenticeships in @GetCountryText(Model.Country)? </h2>
                <p class="govuk-body"> Visit your local apprenticeships website to search for vacancies in your area. </p>
                <p class="govuk-body"><a href="@GetCountryUrl(Model.Country)" class="govuk-link" rel="external" target="_blank">Explore apprenticeships in @GetCountryText(Model.Country)<span class="govuk-visually-hidden"> (Opens in a new window)</span></a></p>
            }

            @if (Model.Location.Latitude == 0)
            {
                <h2 class="govuk-heading-l">
                    Invalid postcode
                </h2>
                <p class="govuk-body">
                    The postcode you have entered is invalid, please enter a valid postcode and update results.
                </p>
            }

        </div>
        <div class="govuk-grid-column-one-third">
            <partial name="Panels/_GetFreeHelpAndSupport" />
        </div>
    </div>
</div>


@functions
{
    private string GetCountryText(Country country)
    {
        switch (country)
        {
            case Country.Wales:
                return "Wales";
            case Country.Scotland:
                return "Scotland";
            case Country.NorthernIreland:
                return "Northern Ireland";
            default:
                return "Other";
        }
    }

    private string GetCountryUrl(Country country)
    {
        switch (country)
        {
            case Country.Wales:
                return "https://ams.careerswales.com/Public/Default.aspx?mode=vacancy";
            case Country.Scotland:
                return "https://www.apprenticeships.scot/find-a-vacancy/";
            case Country.NorthernIreland:
                return "https://www.nidirect.gov.uk/services/search-apprenticeship-opportunities";
            default:
                return "Other";
        }
    }
}