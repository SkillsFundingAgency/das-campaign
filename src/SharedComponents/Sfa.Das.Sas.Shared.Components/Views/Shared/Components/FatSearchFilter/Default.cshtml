@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Sfa.Das.Sas.Shared.Components.ViewModels.Css.Interfaces
@model Sfa.Das.Sas.Shared.Components.ViewComponents.Fat.FatSearchFilterViewModel
@inject ICssViewModel CssViewModel



<h3 class="@CssViewModel.HeadingMedium">Showing search results for:</h3> 
@await Component.InvokeAsync("FatSearch", new { fatSearchRoute = "/employer/find-apprenticeships", inline = true })

<form asp-controller="Fat" asp-action="Search" method="get">
    <h3 class="@CssViewModel.HeadingMedium">Filter results</h3>
    <div class="@(CssViewModel.FormCss.FormGroup)">
        <p class="@(CssViewModel.UtilitiesCss.FontWeightBold)">Apprenticeship level:</p>
        <div class="@CssViewModel.FormCss.Checkbox das-search-results__filter-checkboxes">
            @foreach (var item in Model.LevelsAggregate.OrderBy(m => m.Value))
            {
                <div class="@CssViewModel.FormCss.CheckboxItem das-search-results__filter-checkbox">
                    <input class="@CssViewModel.FormCss.CheckboxInput" value="@item.Value" id="SelectedLevels_@(item.Value)" name="SelectedLevels" type="checkbox" @Html.Raw(item.Checked ? "checked" : "") @Html.Raw(item.Count == 0 ? "disabled" : "") />
                    <label for="SelectedLevels_@(item.Value)" class="@Html.Raw(item.Count == 0 ? "disabled" : "") @(CssViewModel.FormCss.CheckboxLabel)">Level @item.Value (@item.Count)</label>
                </div>
            }
        </div>
    </div>
    <div class="@(CssViewModel.FormCss.FormGroup)">
        <input type="hidden" asp-for="Keywords" />
        <input type="hidden" asp-for="SortOrder" />
        <input type="hidden" asp-for="ResultsToTake" />
        <button type="submit" class="@(CssViewModel.ButtonSecondary)" id="fat-filter-update-results">
            Update results
        </button>
    </div>

</form>